language: cpp
sudo: false

env:
  global:
    - COMMONFLAGS="-Wall -Wextra -pedantic -Werror"

matrix:
  include:
    - compiler: clang
      env: COMPILER=clang++-3.6 BACKEND=make BUILD_ARGS="-j4"
      addons: &clang-36
        apt:
          sources: &sources
            - boost-latest
            - llvm-toolchain-precise-3.6
            - llvm-toolchain-precise-3.7
            - llvm-toolchain-precise-3.8
            - ubuntu-toolchain-r-test
          packages:
            - clang-3.6
            - libstdc++-5-dev
            - libboost1.55-dev
            - libboost-iostreams1.55-dev
            - libboost-program-options1.55-dev
            - ninja-build
            - python-virtualenv
    - compiler: clang
      env: COMPILER=clang++-3.6 BACKEND=ninja
      addons: *clang-36

    - compiler: clang
      env: COMPILER=clang++-3.7 BACKEND=make BUILD_ARGS="-j4"
      addons: &clang-37
        apt:
          sources: *sources
          packages:
            - clang-3.7
            - libstdc++-5-dev
            - libboost1.55-dev
            - libboost-iostreams1.55-dev
            - libboost-program-options1.55-dev
            - ninja-build
            - python-virtualenv
    - compiler: clang
      env: COMPILER=clang++-3.7 BACKEND=ninja
      addons: *clang-37

    - compiler: clang
      env: COMPILER=clang++-3.8 BACKEND=make BUILD_ARGS="-j4"
      addons: &clang-38
        apt:
          sources: *sources
          packages:
            - clang-3.8
            - libstdc++-5-dev
            - libboost1.55-dev
            - libboost-iostreams1.55-dev
            - libboost-program-options1.55-dev
            - ninja-build
            - python-virtualenv
    - compiler: clang
      env: COMPILER=clang++-3.8 BACKEND=ninja
      addons: *clang-38

    - compiler: gcc
      env: >
        COMPILER=g++-5 BACKEND=make BUILD_ARGS="-j4"
        EXTRAFLAGS=-Wsuggest-override
      addons: &gcc-5
        apt:
          sources: *sources
          packages:
            - g++-5
            - libboost1.55-dev
            - libboost-iostreams1.55-dev
            - libboost-program-options1.55-dev
            - ninja-build
            - python-virtualenv
    - compiler: gcc
      # GCC doesn't like building in parallel apparently. What am I doing with
      # my life?
      env: >
        COMPILER=g++-5 BACKEND=ninja BUILD_ARGS="-j1"
        EXTRAFLAGS=-Wsuggest-override
      addons: *gcc-5

    - compiler: gcc
      env: >
        COMPILER=g++-6 BACKEND=make BUILD_ARGS="-j4"
        EXTRAFLAGS=-Wsuggest-override
      addons: &gcc-6
        apt:
          sources: *sources
          packages:
            - g++-6
            - libboost1.55-dev
            - libboost-iostreams1.55-dev
            - libboost-program-options1.55-dev
            - ninja-build
            - python-virtualenv
    - compiler: gcc
      env: >
        COMPILER=g++-6 BACKEND=ninja BUILD_ARGS="-j1"
        EXTRAFLAGS=-Wsuggest-override
      addons: *gcc-6

    - os: osx
      osx_image: xcode7.2
      env: COMPILER=clang++ BACKEND=ninja
    - os: osx
      osx_image: xcode7.2
      env: COMPILER=clang++ BACKEND=ninja EXTRAFLAGS=-DMETTLE_NO_STDLIB_EXTS

cache:
  apt: true

before_install:
  - set -e
  - |
    if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      shell_session_update() { :; }
      brew update
      brew install ninja
    else
      virtualenv env && source env/bin/activate
    fi
install:
  # Install the latest master revision of bfg9000.
  - git clone https://github.com/jimporter/bfg9000.git
  - pushd bfg9000
  - python setup.py install
  - popd
script:
  - >
    CXX=${COMPILER} CXXFLAGS="${COMMONFLAGS} ${EXTRAFLAGS}"
    9k build --vendorize --backend=${BACKEND}
  - cd build
  - ${BACKEND} test ${BUILD_ARGS}
